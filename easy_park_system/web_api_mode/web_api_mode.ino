#include <WiFi.h>
#include <WebServer.h>
#include "HTTPClient.h"
#include "ArduinoJson.h"
#include <Adafruit_SSD1306.h>
#include <string.h>

//定义控制SG90舵机的频率、管道、分辨率、以及控制引脚
#define FREQ 50 //频率
#define CHANNEL 0 //通道
#define RESOLUTION 10 //分辨率
#define LED 3 // led 引脚

//定义OLED屏幕
#define WIDTH 128 //长度
#define HEIGHT 64  //宽度
#define OLED_MOSI 3
#define SCL 5  //时钟线
#define SDA 4  //数据线

//取模汉字（十六进制）
const unsigned char characters [][32] = 
{
  {0x02,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,
  0x10,0x10,0x1F,0xF0,0x01,0x00,0x11,0x10,0x11,0x08,0x21,0x04,0x45,0x04,0x02,0x00},/*"京",0*/
  {0x00,0x40,0x20,0x40,0x13,0xF8,0x10,0x48,0x87,0xFE,0x40,0x48,0x4B,0xF8,0x08,0x40,
  0x10,0x40,0x13,0xF8,0xE0,0x40,0x20,0x40,0x27,0xFC,0x20,0x40,0x20,0x40,0x00,0x40},/*"津",1*/
  {0x04,0x44,0x7C,0x78,0x04,0x42,0x1C,0x3E,0xE4,0x00,0x3F,0xF8,0x21,0x08,0x3F,0xF8,
  0x21,0x08,0x3F,0xF8,0x04,0x40,0x3F,0xF8,0x04,0x40,0xFF,0xFE,0x10,0x10,0x20,0x08},/*"冀",2*/
  {0x00,0x00,0x7F,0xFC,0x04,0x40,0x24,0x48,0x14,0x50,0x04,0x40,0xFF,0xFE,0x00,0x00,
  0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10},/*"晋",3*/
  {0x00,0x00,0x23,0xF8,0x10,0x10,0x10,0x20,0x00,0x40,0x00,0x40,0xF0,0x40,0x10,0x40,
  0x10,0x40,0x10,0x40,0x10,0x40,0x11,0x40,0x10,0x80,0x28,0x00,0x47,0xFE,0x00,0x00},/*"辽",4*/
  {0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,
  0x00,0x00,0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10},/*"吉",5*/
  {0x00,0x00,0x3F,0xF8,0x21,0x08,0x29,0x28,0x25,0x48,0x3F,0xF8,0x01,0x00,0x01,0x00,
  0x3F,0xF8,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,0x48,0x88,0x44,0x44,0x84,0x44},/*"黑",6*/
  {0x00,0x80,0x20,0x40,0x10,0x40,0x13,0xFC,0x82,0x04,0x42,0x04,0x42,0x04,0x13,0xFC,
  0x12,0x04,0x22,0x00,0xE2,0x00,0x22,0x00,0x24,0x00,0x24,0x00,0x28,0x00,0x10,0x00},/*"沪",7*/
  {0x08,0x20,0x08,0x20,0xFF,0xFE,0x08,0x20,0x0A,0x20,0x02,0x00,0x7F,0xF0,0x02,0x10,
  0x02,0x14,0x22,0x12,0x22,0x12,0x24,0x12,0x44,0x10,0x08,0x10,0x10,0xA0,0x20,0x40},/*"苏",8*/
  {0x02,0x08,0x42,0x1C,0x22,0x60,0x22,0x40,0x0F,0xC0,0x82,0x40,0x42,0x7E,0x52,0xC8,
  0x13,0x48,0x2E,0x48,0xE2,0x48,0x22,0x48,0x22,0x48,0x22,0x48,0x2A,0x88,0x05,0x08},/*"浙",9*/
  {0x10,0x40,0x10,0x20,0x23,0xFE,0x7A,0x02,0x4C,0x04,0x49,0xF8,0x48,0x00,0x48,0x00,
  0x7B,0xFE,0x48,0x90,0x48,0x90,0x48,0x90,0x49,0x12,0x79,0x12,0x4A,0x0E,0x04,0x00},/*"皖",10*/
  {0x20,0x00,0x17,0xFC,0x00,0x04,0x41,0x04,0x41,0x04,0x4F,0xE4,0x49,0x24,0x49,0x24,
  0x49,0x24,0x4F,0xE4,0x49,0x04,0x41,0x24,0x41,0xF4,0x5E,0x14,0x48,0x04,0x40,0x0C},/*"闽",11*/
  {0x10,0x40,0xFE,0x78,0x44,0xD0,0x29,0x20,0xFE,0x58,0x01,0x86,0x7C,0xF8,0x44,0x20,
  0x7D,0xFC,0x44,0x00,0x7C,0xF8,0x10,0x88,0xFE,0xA8,0x10,0xA8,0x10,0x50,0x11,0x88},/*"赣",12*/
  {0x08,0x00,0x1F,0xE0,0x20,0x20,0x7F,0xF8,0xA1,0x08,0x3F,0xF8,0x21,0x08,0x3F,0xF8,
  0x00,0x00,0xFF,0xFE,0x00,0x00,0x1F,0xF0,0x10,0x10,0x1F,0xF0,0x10,0x10,0x1F,0xF0},/*"鲁",13*/
  {0x00,0x80,0xF8,0xF8,0x09,0x08,0x53,0xFE,0x25,0x12,0x11,0x22,0xFD,0xFE,0x24,0x40,
  0x28,0xA2,0x23,0x54,0x20,0x98,0x23,0x34,0x20,0x54,0x20,0x92,0xA3,0x50,0x40,0x20},/*"豫",14*/
  {0x00,0x00,0x77,0x3E,0x55,0x22,0x55,0x24,0x77,0x24,0x00,0x28,0x7F,0x24,0x00,0x24,
  0xFF,0xA2,0x20,0x22,0x3F,0x22,0x01,0x34,0x01,0x28,0x01,0x20,0x0A,0x20,0x04,0x20},/*"鄂",15*/
  {0x02,0x00,0x42,0x00,0x22,0x7C,0x22,0x44,0x0F,0x44,0x82,0x44,0x42,0x7C,0x57,0x44,
  0x16,0xC4,0x2A,0x44,0xF2,0x7C,0x22,0x44,0x22,0x44,0x22,0x44,0x22,0x7C,0x02,0x44},/*"湘",16*/
  {0x02,0x00,0x3F,0xF8,0x29,0x28,0x25,0x48,0x2F,0xE8,0x23,0x88,0x25,0x48,0x29,0x28,
  0x3F,0xF8,0x00,0x00,0xFF,0xFE,0x10,0x00,0x1F,0xF8,0x00,0x08,0x00,0x50,0x00,0x20},/*"粤",17*/
  {0x00,0x40,0x20,0x40,0x17,0xFC,0x10,0x40,0x83,0xF8,0x42,0x08,0x43,0xF8,0x12,0x08,
  0x13,0xF8,0x22,0x08,0xE3,0xF8,0x22,0x08,0x2F,0xFE,0x21,0x10,0x22,0x08,0x04,0x04},/*"滇",18*/
  {0x00,0x40,0x20,0xA0,0x11,0x10,0x12,0x08,0x85,0xF6,0x48,0x00,0x47,0xC4,0x14,0x54,
  0x14,0x54,0x27,0xD4,0xE4,0x54,0x24,0x54,0x27,0xD4,0x24,0x44,0x25,0x54,0x04,0x88},/*"渝",19*/
  {0x04,0x40,0xFF,0xFE,0x04,0x48,0x00,0x24,0x1F,0xFE,0x50,0x20,0x57,0xA0,0x75,0x24,
  0x17,0xA4,0xF4,0xA8,0x57,0xA8,0x55,0x10,0x95,0x12,0x27,0xAA,0x20,0x46,0x40,0x82},/*"藏",20*/
  {0x00,0x40,0x78,0x40,0x48,0x40,0x57,0xFC,0x50,0x40,0x62,0x48,0x51,0x50,0x48,0x40,
  0x4F,0xFE,0x48,0xA0,0x68,0xA0,0x51,0x10,0x41,0x10,0x42,0x08,0x44,0x04,0x48,0x02},/*"陕",21*/
  {0x08,0x10,0x08,0x10,0x08,0x10,0x08,0x10,0x7F,0xFE,0x08,0x10,0x08,0x10,0x08,0x10,
  0x08,0x10,0x0F,0xF0,0x08,0x10,0x08,0x10,0x08,0x10,0x08,0x10,0x0F,0xF0,0x08,0x10},/*"甘",22*/
  {0x01,0x00,0x01,0x00,0x7F,0xFC,0x01,0x00,0x3F,0xF8,0x01,0x00,0xFF,0xFE,0x00,0x00,
  0x1F,0xF0,0x10,0x10,0x1F,0xF0,0x10,0x10,0x1F,0xF0,0x10,0x10,0x10,0x50,0x10,0x20},/*"青",23*/
  {0x02,0x00,0x01,0x00,0x01,0x00,0x7F,0xFE,0x40,0x02,0x80,0x04,0x00,0x00,0x3F,0xF8,
  0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x05,0x00,0x02,0x00},/*"宁",24*/
  {0x10,0x00,0x08,0x04,0x7F,0x78,0x00,0x40,0x22,0x40,0x14,0x40,0xFF,0x7E,0x08,0x48,
  0x08,0x48,0x7F,0x48,0x08,0x48,0x2A,0x48,0x49,0x48,0x88,0x88,0x28,0x88,0x11,0x08},/*"新",25*/
  {0x01,0x10,0x21,0x10,0x17,0xFC,0x11,0x10,0x81,0x10,0x4F,0xFE,0x41,0x10,0x12,0x08,
  0x17,0xF4,0x2A,0x12,0xE2,0x10,0x23,0xF0,0x22,0x04,0x22,0x04,0x21,0xFC,0x00,0x00},/*"港",26*/
  {0x00,0x80,0x21,0x00,0x17,0xFC,0x14,0x44,0x85,0x54,0x44,0x44,0x47,0xFC,0x14,0xE4,
  0x15,0x54,0x24,0x04,0xE0,0x40,0x2F,0xFE,0x20,0xA0,0x21,0x10,0x22,0x08,0x0C,0x06},/*"澳",27*/
  {0x02,0x00,0x02,0x00,0x04,0x00,0x08,0x20,0x10,0x10,0x20,0x08,0x7F,0xFC,0x20,0x04,
  0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10},/*"台",28*/
};

TwoWire i2c = TwoWire(0);
Adafruit_SSD1306 oled = Adafruit_SSD1306(128, 64, &i2c);

//设置外部WiFi的账号密码
char* ssid = "learn";
char* password = "cw521997";

//定义用于接收来自主机传输的数据的全局变量
String car_number;
int right;

//定义服务器
WebServer server(80);

//初始化OLED屏幕
void Init_OLED()
{
  i2c.begin(SDA, SCL, 400000);
  oled.begin(SSD1306_SWITCHCAPVCC, 0x3c);
  oled.setTextSize(1);
  oled.setTextColor(INVERSE);
}

//显示车辆识别系统初始画面
void OLED_first()
{
  oled.clearDisplay();
  oled.setCursor(0, 0);
  oled.print("hello world!\n");
  oled.display();
}

//打印接收来自主机的数据
void OLED_infoprint()
{
  oled.clearDisplay();
  oled.drawBitmap(0, 0, characters[0], 16, 16, 1);
  oled.setCursor(20, 0);
  for(int i = 3; i <= 8; i++)
    oled.printf("%c", car_number[i]);
  oled.display();
  delay(1000);
  if(right == 1)
  {
    oled.setCursor(20, 20);
    oled.println("Welcome!!!");
    oled.display();
  }
  else
  {
    oled.setCursor(20, 20);
    oled.println("Sorry '_'");
    oled.display();
  }
  delay(1000);
}

//初始化SG90舵机
void SG90_init()
{
  ledcSetup(CHANNEL, FREQ, RESOLUTION);
  ledcAttachPin(LED, CHANNEL);
}

//根据主机传来的数据决定是否启动摇杆
void SG90_move()
{
  if(right == 1)
  {
    ledcWrite(CHANNEL, 50);
    delay(200);
    ledcWrite(CHANNEL, 0);
    delay(5000);
    ledcWrite(CHANNEL, 100);
    delay(250);
    ledcWrite(CHANNEL, 0);
  }
}

//用于解析来自主机发送的json数据，并存入对应的变量中
void JsonSolution(String data)
{
  DynamicJsonDocument doc(1024);
  deserializeJson(doc, data);
  car_number = doc["car_number"].as<String>();
  right = doc["right"].as<int>();
  Serial.printf("%s   %d\n", car_number, right);
}

//扫描可用wifi并于串口打印
void Scan_Useful_WiFi()
{
  int num = WiFi.scanNetworks();
  Serial.printf("扫描到 %d 个可用WiFi\r\n", num);
  for(int i = 0; i < num; i++)
  {
    Serial.print(WiFi.SSID(i));
    Serial.printf("[%d] \r\n", WiFi.RSSI(i));
  }
}

//用于处理来自主机的post请求
void handleRoot()
{
  String data = server.arg("data");
  Serial.println(data);
  server.send(200,"text/html",data);
  Serial.println("The data has received");
  JsonSolution(data);
  
  OLED_infoprint();
  SG90_move();
  OLED_first();
}


void setup() {
  // put your setup code here, to run once:
  SG90_init();
  Init_OLED();
  OLED_first();
  Serial.begin(115200);

  //设置为STA模式
  WiFi.mode(WIFI_STA);

  //扫描并连接WiFi
  Scan_Useful_WiFi();
  WiFi.begin(ssid, password);
  Serial.printf("开始连接wifi: %s", ssid);
  while(WiFi.status() != WL_CONNECTED)
  {
    Serial.print(". ");
    delay(200);
  }

  //打印IP地址
  Serial.println();
  Serial.println("WiFi连接成功");
  Serial.print("IP地址:");
  Serial.println(WiFi.localIP());

  //启动web服务器
  server.on("/",HTTP_POST, handleRoot);
  Serial.println("成功启动服务器");
  server.begin();

}
void loop() {
  // put your main code here, to run repeatedly:
  server.handleClient();//循环等待主机发送数据
}
